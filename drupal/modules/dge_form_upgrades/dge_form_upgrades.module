<?php

/**
 * Copyright (C) 2017 Entidad Pública Empresarial Red.es
 * 
 * This file is part of "dge_form_upgrades (datos.gob.es)".
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * Implements hook_permission().
 */

function dge_form_upgrades_permission() {
  return array(
    'access form upgrades' => array(
      'title' => t('Administer DGE Form Upgrades'),
      'description' => t('Allow users to edit form description, link buttons and more'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function dge_form_upgrades_menu() {
  $items['admin/config/dge/form-descriptions'] = array(
    'title'             => 'Form Descriptions',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('dge_form_descriptions_admin_settings'),
    'access arguments'  => array('access form upgrades'),
    'type'              => MENU_NORMAL_ITEM,
    'file'              => 'dge_form_upgrades.admin.inc',
  );
  $items['admin/config/dge/form-links'] = array(
    'title'             => 'Form Links',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('dge_form_links_admin_settings'),
    'access arguments'  => array('access form upgrades'),
    'type'              => MENU_NORMAL_ITEM,
    'file'              => 'dge_form_upgrades.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function dge_form_upgrades_form_node_form_alter(&$form, $form_state, $form_id) {
  global $user;
  global $language;

  //get current type
  $type = $form['#node']->type;
  //get enabled content types for displaying additional info
  $enabled_content_types = variable_get('dge_send_content_types', ADD_CONTENT_TYPES);

  if (in_array($type, $enabled_content_types) &&
       (!user_is_logged_in() || variable_get($type.'_all_access_form_description', 0))) {
    
    //Get description for current language
    $defaults = array(
        'value' => '',
        'format' => 'full_html',
    );
    $content_type_description_field = variable_get($type.'_'.$language->language.'_form_description', $defaults);
    $final_text = check_markup($content_type_description_field['value'], $content_type_description_field['format']);
    //If empty text then get default language text
    if (empty($final_text) && $language->language != 'es') {
      $content_type_description_field = variable_get($type.'_es_form_description', $defaults);
      if (!empty($content_type_description_field['value'])) {
        $final_text = "<div lang='es' xml:lang='es'>".
                      check_markup($content_type_description_field['value'], $content_type_description_field['format'])
                      .'</div>';
      }
    }
    if (!empty($final_text)) {
      $form['info_form'] = array(
        '#markup' => '<div class="dge-form-description">'.$final_text.'</div>',
        '#weight' => -50,
      );
    }
  }

}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function dge_form_upgrades_form_user_register_form_alter(&$form, $form_state, $form_id) {
  global $language;

  //Get description for current language
  $defaults = array(
    'value' => '',
    'format' => 'full_html',
  );
  $register_user_description_field = variable_get('registration_'.$language->language.'_form_description', $defaults);
  $final_text = check_markup($register_user_description_field['value'], $register_user_description_field['format']);
  //If empty text then get default language text
  if (empty($final_text) && $language->language != 'es') {
    $register_user_description_field = variable_get('registration_es_form_description', $defaults);
    if (!empty($register_user_description_field['value'])) {
      $final_text = "<div lang='es' xml:lang='es'>".
                    check_markup($register_user_description_field['value'], $register_user_description_field['format'])
                    .'</div>';
    }
  }
  if (!empty($final_text)) {
    $form['info_form'] = array(
      '#markup' => '<div class="dge-form-description">'.$final_text.'</div>',
      '#weight' => -50,
    );
  }
}


/**
 * Implements hook_block_info().
 */
function dge_form_upgrades_block_info() {
  $blocks = array();

  foreach(variable_get('dge_send_content_types', ADD_CONTENT_TYPES) as $type) {
    $blocks['dge_form_upd_link_'.$type] = array(
      'info' => t('DGE Add Content !type button',array('!type' => $type)),
    );
  }

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function dge_form_upgrades_block_view($delta = '') {
  $block = array();
  if(strstr($delta,'dge_form_upd_link_') !== false){
    $type = str_replace('dge_form_upd_link_', '', $delta);
    $block['subject'] = t('Add Content @type Link Button', array('@type' => ucfirst($type)));
    $block['content'] = dge_form_upgrades_button_block($type);
  }
  return $block;
}

/**
 * Content of Node Add button block
 */
function dge_form_upgrades_button_block($type) {
  $text_link = variable_get('dge_form_links_title_'.$type, '');
  $url_link = variable_get('dge_form_links_url_'.$type, '');

  //If URL Link is empty get value from dge_access_node
  if (empty($url_link)) {
    $url_link = variable_get('dge_access_node_add_redirect_'.$type,'');
  }
  if (empty($url_link)) {
    watchdog('dge_form_upgrades', 'ADD BUTTON: No se ha configurado una URL para el tipo de contenido @type', array('@type' => $type), WATCHDOG_WARNING);
    return '';
  }
  $item = menu_get_item($url_link);
  //Check if the user can access to the page
  if ($item && $item['access']) {
    if (! variable_get('dge_form_links_'.$type.'button_hidden', false)) {
      return theme('dge_form_upgrades_link', array( 'type' => $type, 'text_link' => $text_link, 'url_link' => $url_link, 'wrapper' => TRUE ));
    } else {
      $button = theme('dge_form_upgrades_link', array( 'type' => $type, 'text_link' => $text_link, 'url_link' => $url_link ));
      dge_basic_add_additional_button($button, -10);
    }
  } else {
    watchdog('dge_form_upgrades', 'ADD BUTTON: El usuario no puede acceder a la URL @url_link', array('@url_link' => $url_link), WATCHDOG_WARNING);
    return '';
  }
}


/**
 * Implements hook_theme().
 */
function dge_form_upgrades_theme() {
  return array(
    'dge_form_upgrades_link' => array(
      'variables' => array('type' => NULL, 'text_link' => NULL, 'url_link' => NULL, 'wrapper' => FALSE),
    ),
  );
}

/**
 * THEME theme_dge_form_upgrades_link.
 */
function theme_dge_form_upgrades_link($variables) {
  $output = '';
  $text_link = $variables['text_link'];
  if(empty($text_link)) {
    $type_title = '';
    if (module_exists('i18n_node')) {
      $type_title = i18n_node_type_name($variables['type']);
    } else {
      $node_type = node_type_load($variables['type']);
      $type_title = $node_type->name;
    }
    $text_link = t('Report a new @type', array('@type' => $type_title));
  }
  $output .= '<a href="'.url($variables['url_link']).'" title="'.$text_link.'" ';
  $output .= 'class="add-icon dge-type-add-link dge-type-add-link-'.$variables['type'].'">';
  $output .= $text_link.'</a>';

  if (!empty($variables['wrapper']))
    $output = '<div class="dge-content-type-add-link dge-content-type-add-link-'.$variables['type'].'">'.$output.'</div>';

  return $output;
}
